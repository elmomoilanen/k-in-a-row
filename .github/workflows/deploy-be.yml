name: deploy-be

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  tests:
    uses: ./.github/workflows/tests-be.yml
  build:
    name: Build an image and push it to Google Artifact Registry
    needs: tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./be
    env:
      PROJECT_ID: '${{ secrets.GOOGLE_PROJECT_ID }}'
      SERVICE_NAME: '${{ secrets.GOOGLE_SERVICE_NAME }}'
      REGION: '${{ secrets.GOOGLE_REGION }}'
      IMAGE_NAME: '${{ secrets.GOOGLE_IMAGE_NAME }}'
      AR_DOMAIN: 'docker.pkg.dev'
    steps:
      - uses: actions/checkout@v3
      - name: Build an image
        run: |
          docker build -t "$REGION-$AR_DOMAIN/$PROJECT_ID/$SERVICE_NAME/$IMAGE_NAME:$GITHUB_SHA" .
      - uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GOOGLE_SERVICE_ACCOUNT_FILE }}'
      - uses: google-github-actions/setup-gcloud@v1
      - name: Authorize Docker push
        run: |
          gcloud auth configure-docker "$REGION-$AR_DOMAIN" -q
      - name: Push the image to Artifact Registry
        run: |
          docker push "$REGION-$AR_DOMAIN/$PROJECT_ID/$SERVICE_NAME/$IMAGE_NAME:$GITHUB_SHA"
  deploy:
    name: Deployment to Google Cloud Run with Terraform
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./be/gcp
    env:
      TF_VAR_service_name: '${{ secrets.GOOGLE_SERVICE_NAME }}'
      TF_VAR_image_tag: '${{ github.sha }}'
      TF_VAR_client_url: '${{ secrets.CLIENT_URL }}'
      TF_VAR_image_name: '${{ secrets.GOOGLE_IMAGE_NAME }}'
    steps:
      - uses: actions/checkout@v3
      - name: Terraform fmt check
        run: |
          terraform fmt -check
      - uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GOOGLE_SERVICE_ACCOUNT_FILE }}'
      - name: Terraform init
        run: |
          terraform init -input=false
      - name: Terraform plan
        run: |
          terraform plan -input=false -var-file=environments/prod.tfvars
      - name: Terraform apply
        run: |
          terraform apply -input=false -auto-approve -var-file=environments/prod.tfvars
